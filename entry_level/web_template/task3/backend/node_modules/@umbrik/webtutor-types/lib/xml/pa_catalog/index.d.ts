type PaCatalogDocumentTopElem = XmlTopElem &
AdminAccessBase & {
  id: XmlElem<number, PaCatalogDocumentTopElem>;
  code: XmlElem<string>;
  name: XmlElem<string>;
  assessment_appraise_id: XmlElem<number, AssessmentAppraiseCatalogDocumentTopElem>;
  assessment_plan_id: XmlElem<number, AssessmentPlanCatalogDocumentTopElem>;
  person_id: XmlElem<number, CollaboratorCatalogDocumentTopElem>;
  person_fullname: XmlElem<string>;
  person_position_name: XmlElem<string>;
  person_position_id: XmlElem<number, PositionCatalogDocumentTopElem>;
  person_position_parent_id: XmlElem<number, SubdivisionCatalogDocumentTopElem>;
  expert_person_id: XmlElem<number, CollaboratorCatalogDocumentTopElem>;
  expert_person_fullname: XmlElem<string>;
  expert_person_position_name: XmlElem<string>;
  expert_person_position_id: XmlElem<number, PositionCatalogDocumentTopElem>;
  expert_person_position_parent_id: XmlElem<number, SubdivisionCatalogDocumentTopElem>;
  custom_experts: XmlElem<string>;
  custom_experts_array: XmlMultiElemObject<number, CollaboratorCatalogDocumentTopElem>;
  is_custom_experts: XmlElem<boolean>;
  department_id: XmlElem<number>;
  department_name: XmlElem<string>;
  flag_appraise_department: XmlElem<boolean>;
  competence_profile_id: XmlElem<number, CompetenceProfileCatalogDocumentTopElem>;
  kpi_profile_id: XmlElem<number, KpiProfileCatalogDocumentTopElem>;
  kpi_profiles_id: XmlMultiElemObject<number, KpiProfileCatalogDocumentTopElem>;
  bonus_profile_id: XmlElem<number, BonusProfileCatalogDocumentTopElem>;
  budget_period_id: XmlElem<number, BudgetPeriodCatalogDocumentTopElem>;
  period_start: XmlElem<Date>;
  period_end: XmlElem<Date>;
  assessment_appraise_type: XmlElem<string, typeof common.assessment_appraise_types>;
  is_done: XmlElem<boolean>;
  is_ready: XmlElem<boolean>;
  is_final: XmlElem<boolean>;
  status: XmlElem<string, typeof common.assessment_appraise_participants>;
  overall: XmlElem<number>;
  appraise_date: XmlElem<Date>;
  index: XmlElem<number>;
  workflow_id: XmlElem<number, WorkflowCatalogDocumentTopElem>;
  workflow_state: XmlElem<string>;
  workflow_state_name: XmlElem<string>;
  workflow_state_last_date: XmlElem<Date>;
  is_workflow_init: XmlElem<boolean>;
  flag_is_processed: XmlElem<boolean>;
  workflow_person_id: XmlElem<number, CollaboratorCatalogDocumentTopElem>;
  workflow_end_date: XmlElem<Date>;
  modification_date: XmlElem<Date>;
  app_instance_id: XmlElem<string>;
  OnBuild(): void;
};
